options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # Step 1: Install dependencies
  - name: 'gcr.io/cloud-builders/npm'
    args: ['install']
    id: 'npm-install'

  # Step 2: Build the Nuxt SSR application.
  # This runs `npm run build`, which creates the self-contained .output directory.
  - name: 'gcr.io/cloud-builders/npm'
    args: ['run', 'build']
    id: 'npm-build'
    waitFor: ['npm-install']

  # Step 3: Build the Docker container image using the Dockerfile.
  # The image is tagged with the commit SHA for traceability.
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}'
      - '.'
    id: 'docker-build'
    waitFor: ['npm-build']

  # Step 4: Push the container image to Artifact Registry.
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'us-central1-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}'
    id: 'docker-push'
    waitFor: ['docker-build']

  # Step 5: Deploy the new container image to Cloud Run.
  - name: 'gcr.io/google-cloud-sdk/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}' # Substitution variable for the Cloud Run service name
      - '--image=us-central1-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}'
      - '--region=us-central1' # Your preferred region
      - '--platform=managed'
      - '--allow-unauthenticated' # Make the service publicly accessible
      - '--project=${_PROJECT_ID}'
    id: 'deploy-to-cloud-run'
    waitFor: ['docker-push']

# Substitution variables to be configured in the Cloud Build trigger.
substitutions:
  _SERVICE_NAME: 'ivmanto-com' # Your Cloud Run service name
  _REPO_NAME: 'ivmanto-com-repo' # Your Artifact Registry repository name

# The image created by this build.
images:
  - 'us-central1-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}:${COMMIT_SHA}'
